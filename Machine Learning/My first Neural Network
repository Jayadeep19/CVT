'''
Creating my first neural network, using numpy.
In the following code a neural network of single input layer and sigmoid as output layer has been created
4 samples of data each having 3 inputs have been generated and used to generate the output
Note:
The output is far from converging to the expected outputs. In the upcoming codes, the weights will be updated through backpropogation.
'''



import numpy as np

def sigmoid(x):
    return 1/(1 + np.exp(-x))

training_inputs = np.array([[0,0,1],
                           [1,1,1],
                           [1,0,1],
                            [0,1,1]])

training_outputs = np.array([0,1,1,0]).T
print(training_outputs)

np.random.seed(1)     #to get the same random numbers

synaptic_weights = 2 * np.random.random((3,1)) -1          #weights for the 3 inputs, create a 3*1 array

synaptic_weights.dtype

print('Random starting synaptic weights :')
print(synaptic_weights)

for iteration in range(1):
    input_layer = training_inputs
    output_layer = sigmoid(np.dot(input_layer, synaptic_weights))

print('Outputs after training :')
print(output_layer)

